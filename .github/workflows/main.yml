name: Build and Deploy .NET App to Azure VM

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1️⃣ Checkout Repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # 2️⃣ Setup .NET SDK
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    # 3️⃣ Restore, Build, Test, and Publish
    - name: Restore, Build, Test, and Publish
      run: |
        echo "Restoring dependencies..."
        dotnet restore ./Tailspin.SpaceGame.Web/Tailspin.SpaceGame.Web.csproj
        echo "Building project..."
        dotnet build ./Tailspin.SpaceGame.Web/Tailspin.SpaceGame.Web.csproj --configuration Release --no-restore
        echo "Running tests..."
        dotnet test --no-build --verbosity normal
        echo "Publishing app..."
        dotnet publish ./Tailspin.SpaceGame.Web/Tailspin.SpaceGame.Web.csproj --configuration Release --output ./publish

    # 4️⃣ Setup SSH Agent with Private Key
    - name: Setup SSH Agent
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.VM_SSH_KEY }}

    # 5️⃣ Add VM Host Key to known_hosts
    - name: Add VM Host Key
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts
        echo "✅ Host key added to known_hosts"

    # 6️⃣ Deploy Published Files to VM
    - name: Deploy Published Files to VM
      run: |
        echo "Deploying published files to VM..."
        rsync -avz --delete ./publish/ ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }}:/home/${{ secrets.VM_USER }}/app

    # 7️⃣ Restart Systemd Service on VM (Port 5000)
    - name: Restart myapp Service
      run: |
        echo "Restarting myapp service on port 5000..."
        ssh ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} "
          sudo systemctl daemon-reload
          sudo systemctl restart myapp
        "

    # 8️⃣ Verify App is Running on Port 5000
    - name: Verify App is Running on Port 5000
      run: |
        echo "Checking if app is listening on port 5000..."
        ssh ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} "
          sudo lsof -i :5000 || (echo '❌ App is NOT listening on port 5000!' && exit 1)
          curl -I http://localhost:5000 || (echo '❌ App is not responding on port 5000!' && exit 1)
          echo '✅ App is running on port 5000 and responding successfully!'
        "

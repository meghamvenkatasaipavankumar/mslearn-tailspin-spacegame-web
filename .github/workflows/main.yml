name: Build and Publish Tailspin.SpaceGame.Web

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # ----------------- 1️⃣ BUILD JOB -----------------
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Setup .NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'  # Change to 6.0.x or 7.0.x if needed

      # 3. Restore dependencies
      - name: Restore dependencies
        run: dotnet restore ./Tailspin.SpaceGame.Web/Tailspin.SpaceGame.Web.csproj

      # 4. Build project
      - name: Build project
        run: dotnet build ./Tailspin.SpaceGame.Web/Tailspin.SpaceGame.Web.csproj --configuration Release --no-restore

      # 5. Run tests (optional)
      - name: Run tests
        run: dotnet test --configuration Release --no-build --verbosity normal || echo "No tests found"

      # 6. Upload build output as artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            Tailspin.SpaceGame.Web/bin/Release/net8.0/
            !**/*.pdb   # Exclude debug symbols (optional)

  # ----------------- 2️⃣ PUBLISH JOB -----------------
  publish:
    name: Publish App
    runs-on: ubuntu-latest
    needs: build
    steps:
      # 1. Checkout repository so csproj is available
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Setup .NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # 3. Download build artifact (optional but recommended)
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-output

      # 4. Publish project with correct path
      - name: Publish project
        run: dotnet publish ./Tailspin.SpaceGame.Web/Tailspin.SpaceGame.Web.csproj \
               --configuration Release \
               --output ./publish

      # 5. Upload published output as artifact
      - name: Upload publish artifact
        uses: actions/upload-artifact@v4
        with:
          name: publish-output
          path: ./publish
